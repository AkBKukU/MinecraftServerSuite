#!/bin/sh
### BEGIN INIT INFO
# Provides:          minecraft
# Required-Start:    $local_fs $remote_fs $network $syslog $named
# Required-Stop:     $local_fs $remote_fs $network $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# X-Interactive:     true
# Short-Description: Start/stop Minecraft server
# Description:       Start the Minecraft server and associated helpers
#  This script will start apache2, and possibly all associated instances.
#  Moreover, it will set-up temporary directories and helper tools such as
#  htcacheclean when required by the configuration.
### END INIT INFO

DESC="game server"
NAME=minecraft
DAEMON=/usr/sbin/$NAME

SCRIPTNAME="${0##*/}"
SCRIPTNAME="${SCRIPTNAME##[KS][0-9][0-9]}"

function getpid()
{
	pid=p$(s -aux | grep minecraft-server | grep -v SCREEN | grep -v grep | awk '{print $2}')
}

#
# Function that starts the daemon/service
#
do_start()
{
    # Return
    #   0 if daemon has been started
    #   1 if daemon was already running
    #   2 if daemon could not be started

	getpid
	
	if [ -z "$mypid" ]
	then
		$DAEMON
		getpid
  		return 0
	else
        return 1
	fi

}


#
# Function that stops the daemon/service
#
do_stop()
{
    # Return
    #   0 if daemon has been stopped
    #   1 if daemon was already stopped
    #   2 if daemon could not be stopped
    #   other if a failure occurred
    getpid

    if [ ! -z "$mypid" ]
    then
           
        until [ -z "$mypid" ]
        do
            screen -S minecraft-server -X stuff 'stop
            '
            sleep 1
            getpid
        done
    
        return 0
    else
        return 1
    fi
    

}


#
# Function that sends a SIGHUP to the daemon/service
#
do_reload() {
    do_start
    do_stop
}


case "$1" in
  start)
    log_daemon_msg "Starting $DESC" "$NAME"
    do_start
    RET_STATUS=$?
    case "$RET_STATUS" in
        0)
            log_success_msg
            
            ;;

        1)
            log_success_msg
            log_warning_msg "Server was already running"
            
            ;;
        2)
            log_failure_msg
            print_error_msg
            exit 1
            ;;
    esac
    ;;

  stop)
    log_daemon_msg "Stopping $DESC" "$NAME"
    do_stop
    RET_STATUS=$?
    case "$RET_STATUS" in
        0)
            log_success_msg
            
            ;;

        1)
            log_success_msg
            log_warning_msg "Server was not running"
            
            ;;
        2)
        2)
            log_failure_msg
            print_error_msg
            exit 1
            ;;
    esac

    ;;
  status)
    log_daemon_msg "$DESC $NAME is running at $(getpid)"
    exit $?
    ;;

    ;;
  restart)
    log_daemon_msg "Restarting $DESC" "$NAME"
    do_reload
    ;;

    echo "Usage: $SCRIPTNAME {start|stop|status|restart|reload}" >&2
    exit 3
    ;;
esac

exit 0

